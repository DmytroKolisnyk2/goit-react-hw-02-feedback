{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/App.jsx","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","props","className","styles","data_wrapper","data_headline","data_value","good","neutral","bad","total","positivePercentage","Section","statistic","headline","title","children","FeedbackOptions","options","onLeaveFeedback","btn_wrapper","map","item","onClick","type","btn","Notification","message","App","state","handleIncrease","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","isFeedback","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,aAAe,iCAAiC,WAAa,iC,mBCAjID,EAAOC,QAAU,CAAC,SAAW,iC,4KCiCdC,EA9BI,SAACC,GAClB,OACE,qBAAIC,UAAWC,IAAOC,aAAtB,UACE,qBAAIF,UAAWC,IAAOE,cAAtB,mBACQ,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCL,EAAMM,UAEnD,qBAAIL,UAAWC,IAAOE,cAAtB,sBACW,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCL,EAAMO,aAEtD,qBAAIN,UAAWC,IAAOE,cAAtB,kBACO,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCL,EAAMQ,SAElD,qBAAIP,UAAWC,IAAOE,cAAtB,oBACS,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCL,EAAMS,WAEpD,qBAAIR,UAAWC,IAAOE,cAAtB,gCACqB,sBAAMH,UAAWC,IAAOG,WAAxB,SAAqCL,EAAMU,4B,gBCHvDC,EAbC,SAACX,GACf,OACE,0BAASC,UAAWC,IAAOU,UAA3B,UACE,oBAAIX,UAAWC,IAAOW,SAAtB,SAAiCb,EAAMc,QACtCd,EAAMe,a,gBCYEC,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,qBAAKjB,UAAWC,IAAOiB,YAAvB,SACGF,EAAQG,KAAI,SAACC,GAAD,OACX,wBAAmBC,QAAS,kBAAMJ,EAAgBG,IAAOE,KAAK,SAAStB,UAAWC,IAAOsB,IAAzF,SACGH,GADUA,S,iBCINI,EARM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACrB,OAAO,oBAAIzB,UAAWC,IAAOW,SAAtB,SAAiCa,KCCpCC,E,4MACJC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPqB,eAAiB,SAACN,GAChB,EAAKO,UAAS,SAACC,GAAD,sBACXR,EAAOQ,EAAUR,GAAQ,O,EAI9BS,mBAAqB,kBAAM,EAAKJ,MAAMtB,KAAO,EAAKsB,MAAMpB,IAAM,EAAKoB,MAAMrB,S,EAEzE0B,gCAAkC,2BAC7BC,KAAKC,MAAO,EAAKP,MAAMtB,KAAO,EAAK0B,qBAAwB,MAAQ,EADtC,M,EAGlCI,WAAa,kBAA0B,IAApB,EAAKR,MAAMtB,MAAqC,IAAvB,EAAKsB,MAAMrB,SAAoC,IAAnB,EAAKqB,MAAMpB,K,4CAEnF,WACE,OACE,qCACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBmB,KAAKR,mBAG1B,cAAC,EAAD,CAASf,MAAM,aAAf,SACGuB,KAAKD,aACJ,cAAC,EAAD,CAAcV,QAAQ,yBAEtB,cAAC,EAAD,CACEpB,KAAM+B,KAAKT,MAAMtB,KACjBC,QAAS8B,KAAKT,MAAMrB,QACpBC,IAAK6B,KAAKT,MAAMpB,IAChBC,MAAO4B,KAAKL,qBACZtB,mBAAoB2B,KAAKJ,6C,GAtCrBK,aA+CHX,IChDfY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1B9C,EAAOC,QAAU,CAAC,UAAY,2BAA2B,SAAW,4B,kBCApED,EAAOC,QAAU,CAAC,IAAM,6BAA6B,YAAc,wC","file":"static/js/main.3ec21802.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"data_headline\":\"Statistics_data_headline__30Tdk\",\"data_wrapper\":\"Statistics_data_wrapper__2j40i\",\"data_value\":\"Statistics_data_value__hRC9I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headline\":\"Notification_headline__3j_Eu\"};","import styles from \"./Statistics.module.css\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Statistics = (props) => {\n  return (\n    <ul className={styles.data_wrapper}>\n      <li className={styles.data_headline}>\n        Good: <span className={styles.data_value}>{props.good}</span>\n      </li>\n      <li className={styles.data_headline}>\n        Neutral: <span className={styles.data_value}>{props.neutral}</span>\n      </li>\n      <li className={styles.data_headline}>\n        Bad: <span className={styles.data_value}>{props.bad}</span>\n      </li>\n      <li className={styles.data_headline}>\n        Total: <span className={styles.data_value}>{props.total}</span>\n      </li>\n      <li className={styles.data_headline}>\n        Positive feedback: <span className={styles.data_value}>{props.positivePercentage}</span>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.string.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport styles from \"./Section.module.css\";\nimport PropTypes from 'prop-types';\n\nconst Section = (props) => {\n  return (\n    <section className={styles.statistic}>\n      <h2 className={styles.headline}>{props.title}</h2>\n      {props.children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\nexport default Section;\n","import React from \"react\";\nimport styles from \"./FeedbackOptions.module.css\";\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div className={styles.btn_wrapper}>\n      {options.map((item) => (\n        <button key={item} onClick={() => onLeaveFeedback(item)} type=\"button\" className={styles.btn}>\n          {item}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n}\nexport default FeedbackOptions;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({message}) => {\n  return <h2 className={styles.headline}>{message}</h2>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics.jsx\";\nimport Section from \"./Section/Section.jsx\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./Notification/Notification\";\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrease = (type) => {\n    this.setState((prevState) => ({\n      [type]: prevState[type] + 1,\n    }));\n  };\n\n  countTotalFeedback = () => this.state.good + this.state.bad + this.state.neutral;\n\n  countPositiveFeedbackPercentage = () =>\n    `${Math.round((this.state.good / this.countTotalFeedback()) * 100) || 0}%`;\n\n  isFeedback = () => this.state.good === 0 && this.state.neutral === 0 && this.state.bad === 0;\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={[\"good\", \"neutral\", \"bad\"]}\n            onLeaveFeedback={this.handleIncrease}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.isFeedback() ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Section_statistic__30s6l\",\"headline\":\"Section_headline__3NDUC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\",\"btn_wrapper\":\"FeedbackOptions_btn_wrapper__BxSQS\"};"],"sourceRoot":""}